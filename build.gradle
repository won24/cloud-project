plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'war'
}

// WAR 패키징을 위한 설정
bootWar {
    archiveBaseName = 'ROOT'
    archiveFileName = 'ROOT.war'
    archiveVersion = ''
}
war {
    enabled = false
}

configurations {
    providedRuntime
}

group = 'com.cloud'
version = '0.0.1-SNAPSHOT'
description = 'cloud-project'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    // Lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // MyBatis (Spring Boot 3.x 최신 버전)
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

    // JSP 및 JSTL (Spring Boot 3.x 호환)
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.2'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.0'

    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'
}

tasks.named('test') {
    useJUnitPlatform()
}