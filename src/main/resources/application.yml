server:
  port: 8080
  tomcat:
    uri-encoding: UTF-8
  servlet:
    jsp:
      init-parameters:
        development: true  # JSP 개발 모드

spring:
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp

  web:
    resources:
      static-locations: classpath:/static/
      cache:
        period: 0  # 개발 시 캐시 비활성화

  datasource:
#    url: ${DB_URL:jdbc:mysql://10.250.4.245:3306/bidon_db?serverTimezone=Asia/Seoul&characterEncoding=UTF-8}
    url: ${DB_URL:jdbc:mysql://mysql-service:3306/bidon_db?serverTimezone=Asia/Seoul&characterEncoding=UTF-8}
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:admin}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 60000
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-test-query: SELECT 1
      # 연결 실패 시 재시도
      validation-timeout: 5000
      leak-detection-threshold: 60000

  # 기존 JPA 설정
#  jpa:
#    hibernate:
#      naming:
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#    properties:
#      hibernate:
#        show_sql: true
#        format_sql: true
  jpa:
    hibernate:
      ddl-auto: create  # 스키마 자동변경 설정. 개발시에는 update 추천
    show-sql: false        # 개발시에는 true : SQL 쿼리를 로그에 보여줌
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        jdbc:
          time_zone: Asia/Seoul

  jackson:
    time-zone: Asia/Seoul
    date-format: yyyy-MM-dd HH:mm:ss

# 파일 업로드 경로를 Linux 경로로 변경
file:
  upload-dir: "/tmp/uploads"
  base-url: "http://localhost:8080/images/"

# 로깅 설정 강화
logging:
  level:
    root: INFO
    com.cloud.cloudproject: DEBUG
    org.springframework.boot: INFO
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /usr/local/tomcat/logs/spring-boot.log


management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
    access:
      default: read-only     # 기본 액세스 레벨
  endpoint:
    health:
      access: unrestricted   # health 엔드포인트만 무제한 액세스
      show-details: always
      probes:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
    db:
      enabled: true
