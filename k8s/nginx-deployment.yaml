apiVersion: apps/v1
kind: Deployment
metadata:
  name: bidonproject-nginx
  namespace: bidon-proj-ns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bidonproject-nginx
  template:
    metadata:
      labels:
        app: bidonproject-nginx
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: bidonproject-nginx
      # 초기화 컨테이너로 Spring Boot 서비스 대기
      initContainers:
        - name: wait-for-springboot
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              until nslookup bidonproject-springboot-service.bidon-proj-ns.svc.cluster.local; do
                echo "Waiting for springboot-service..."
                sleep 2
              done
              echo "springboot-service is available"
      containers:
        - name: nginx
          image: 679835924866.dkr.ecr.ap-northeast-2.amazonaws.com/bidon/nginx:v1.0
          ports:
            - containerPort: 80
          # 헬스체크 개선
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 3


---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: bidon-proj-ns
spec:
  selector:
    app: bidonproject-nginx
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: bidon-proj-ns
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:679835924866:certificate/c2b1c53a-722f-434d-87d8-96d7b923e8a7
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: nginx-service
                port:
                  number: 80