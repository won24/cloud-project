upstream springboot-backend {
    server bidonproject-springboot-service:8080;
    keepalive 32;
}

server {
    listen 80;
    server_name _;

    # 헬스체크 엔드포인트
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 정적 파일을 Spring Boot에서 가져와서 nginx가 캐싱
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://springboot-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 캐싱 설정
        expires 1y;
        add_header Cache-Control "public, immutable";
        proxy_cache_valid 200 1y;
    }

    # Spring Boot로 프록시
    location / {
        proxy_pass http://springboot-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_redirect off;

        # 타임아웃 설정
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # 버퍼링 설정
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # Spring Boot actuator 헬스체크
    location /actuator/health {
        proxy_pass http://springboot-backend/actuator/health;
        proxy_set_header Host $host;
        access_log off;
    }
}